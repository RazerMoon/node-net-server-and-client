name: Create release

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: npm install

    - name: Compile
      run: npm run compile

    - name: Create Executables
      run: |
        npx pkg -o nnsc-windows.exe -t latest-win-x64 .
        npx pkg -o nnsc-linux -t latest-linux-x64 .
        npx pkg -o nnsc-macos -t latest-macos-x64 .

    - name: Create Scripts
      run: |
        touch server.bat client.bat
        echo "nnsc-windows.exe server" >> server.bat
        echo "nnsc-windows.exe client" >> client.bat
      
    - name: Create Zip
      run: |
        zip --junk-paths nnsc-windows nnsc-windows.exe server.bat client.bat
        zip --junk-paths nnsc-linux nnsc-linux
        zip --junk-paths nnsc-macos nnsc-macos

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.${{ github.run_number }}
        release_name: Release v1.${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Windows Release
      id: upload-windows-release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./nnsc-windows.zip
        asset_name: nnsc-windows.zip
        asset_content_type: application/zip

    - name: Upload Linux Release
      id: upload-linux-release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./nnsc-linux.zip
        asset_name: nnsc-linux.zip
        asset_content_type: application/zip

    - name: Upload macOS Release
      id: upload-macos-release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./nnsc-macos.zip
        asset_name: nnsc-macos.zip
        asset_content_type: application/zip
